{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\learning\\\\vseotzivu\\\\frontend\\\\src\\\\components\\\\PostPage\\\\CommentCards.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useAPI } from '../../hooks/api.hook';\n\nconst CommentCards = () => {\n  const {\n    loading,\n    error,\n    request\n  } = useAPI();\n  const [comments, setComments] = useState({});\n  useEffect(async () => {\n    const response = await request('/api/posts/comments', 'POST', JSON.stringify({\n      postId: \"5f9688b3517561499c3f38f9\"\n    }));\n    let graf = new Map(response.map(comm => [comm._id, { ...comm,\n      used: false\n    }]));\n\n    const use = id => graf.set(id, { ...graf.get(id),\n      used: true\n    });\n\n    const isUsed = id => graf.get(id).used;\n\n    const dfs = id => {\n      use(id);\n      console.log(graf.get(id));\n\n      for (let v in graf.get(id).replays.length) {\n        if (!isUsed(v)) dfs(v);\n      }\n    };\n\n    for (let com in graf) {\n      if (!com[1].used) dfs(com[1]._id);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default CommentCards;","map":{"version":3,"sources":["C:/Users/User/OneDrive/Рабочий стол/learning/vseotzivu/frontend/src/components/PostPage/CommentCards.jsx"],"names":["React","useEffect","useState","useAPI","CommentCards","loading","error","request","comments","setComments","response","JSON","stringify","postId","graf","Map","map","comm","_id","used","use","id","set","get","isUsed","dfs","console","log","v","replays","length","com"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,sBAAvB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAmBC,IAAAA;AAAnB,MAA+BJ,MAAM,EAA3C;AACA,QAAM,CAAEK,QAAF,EAAYC,WAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,YAAU;AAChB,UAAMS,QAAQ,GAAG,MAAMH,OAAO,CAAC,qBAAD,EAAwB,MAAxB,EAAgCI,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAf,CAAhC,CAA9B;AAEA,QAAIC,IAAI,GAAG,IAAIC,GAAJ,CAAQL,QAAQ,CAACM,GAAT,CAAaC,IAAI,IAAI,CAACA,IAAI,CAACC,GAAN,EAAW,EAAC,GAAGD,IAAJ;AAAUE,MAAAA,IAAI,EAAE;AAAhB,KAAX,CAArB,CAAR,CAAX;;AAEA,UAAMC,GAAG,GAAGC,EAAE,IAAIP,IAAI,CAACQ,GAAL,CAASD,EAAT,EAAa,EAAC,GAAGP,IAAI,CAACS,GAAL,CAASF,EAAT,CAAJ;AAAkBF,MAAAA,IAAI,EAAE;AAAxB,KAAb,CAAlB;;AACA,UAAMK,MAAM,GAAGH,EAAE,IAAIP,IAAI,CAACS,GAAL,CAASF,EAAT,EAAaF,IAAlC;;AACA,UAAMM,GAAG,GAAGJ,EAAE,IAAI;AACdD,MAAAA,GAAG,CAACC,EAAD,CAAH;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYb,IAAI,CAACS,GAAL,CAASF,EAAT,CAAZ;;AACA,WAAI,IAAIO,CAAR,IAAad,IAAI,CAACS,GAAL,CAASF,EAAT,EAAaQ,OAAb,CAAqBC,MAAlC,EAA0C;AACtC,YAAG,CAACN,MAAM,CAACI,CAAD,CAAV,EAAeH,GAAG,CAACG,CAAD,CAAH;AAClB;AACJ,KAND;;AAOA,SAAI,IAAIG,GAAR,IAAejB,IAAf,EAAoB;AAChB,UAAG,CAACiB,GAAG,CAAC,CAAD,CAAH,CAAOZ,IAAX,EAAiBM,GAAG,CAACM,GAAG,CAAC,CAAD,CAAH,CAAOb,GAAR,CAAH;AACpB;AAEJ,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAKH,CA7BD;;AA+BA,eAAed,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useAPI } from '../../hooks/api.hook';\r\n\r\nconst CommentCards = () => {\r\n    const { loading, error,  request } = useAPI();\r\n    const [ comments, setComments ] = useState({});\r\n\r\n    useEffect(async ()=>{\r\n        const response = await request('/api/posts/comments', 'POST', JSON.stringify({ postId: \"5f9688b3517561499c3f38f9\" }));\r\n\r\n        let graf = new Map(response.map(comm => [comm._id, {...comm, used: false}]));\r\n\r\n        const use = id => graf.set(id, {...graf.get(id), used: true});\r\n        const isUsed = id => graf.get(id).used;\r\n        const dfs = id => {\r\n            use(id);\r\n            console.log(graf.get(id));\r\n            for(let v in graf.get(id).replays.length) {\r\n                if(!isUsed(v)) dfs(v);\r\n            }\r\n        }\r\n        for(let com in graf){\r\n            if(!com[1].used) dfs(com[1]._id);\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentCards;\r\n"]},"metadata":{},"sourceType":"module"}