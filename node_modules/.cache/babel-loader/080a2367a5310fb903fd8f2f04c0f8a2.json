{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\learning\\\\vseotzivu\\\\frontend\\\\src\\\\components\\\\Catalog\\\\Catalog.jsx\";\nimport React, { useState } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport Spinner from '../Spinners/Spinner';\nimport Card from './Card';\n\nconst Catalog = ({\n  posts,\n  title,\n  download\n}) => {\n  const [loading, setLoading] = useState(true);\n  if (posts.length) setLoading(false);\n  const {\n    ref,\n    inView\n  } = useInView({\n    threshold: 0\n  });\n  if (inView) console.log('В зоне видимости');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, title)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, posts.map((post, index) => /*#__PURE__*/React.createElement(Card, {\n    post: post,\n    key: post.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 46\n    }\n  })), loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 29\n    }\n  }) : ''));\n};\n\nexport default Catalog;","map":{"version":3,"sources":["C:/Users/User/OneDrive/Рабочий стол/learning/vseotzivu/frontend/src/components/Catalog/Catalog.jsx"],"names":["React","useState","useInView","Spinner","Card","Catalog","posts","title","download","loading","setLoading","length","ref","inView","threshold","console","log","map","post","index","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA;AAAhB,CAAD,KAAgC;AAC5C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,MAAGK,KAAK,CAACK,MAAT,EAAiBD,UAAU,CAAC,KAAD,CAAV;AACjB,QAAM;AAAEE,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAiBX,SAAS,CAAC;AAAEY,IAAAA,SAAS,EAAE;AAAb,GAAD,CAAhC;AACA,MAAGD,MAAH,EAAUE,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACV,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,KAAL,CADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMD,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBAAiB,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAED,IAAZ;AAAkB,IAAA,GAAG,EAAEA,IAAI,CAACE,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,CADN,EAEMX,OAAO,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiB,EAF9B,CAJJ,CADJ;AAYH,CAjBD;;AAmBA,eAAeJ,OAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport Spinner from '../Spinners/Spinner';\r\nimport Card from './Card';\r\n\r\nconst Catalog = ({ posts, title, download }) => {\r\n    const [loading, setLoading] = useState(true);\r\n    if(posts.length) setLoading(false);\r\n    const { ref, inView} = useInView({ threshold: 0 });\r\n    if(inView)console.log('В зоне видимости');\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <h2>{title}</h2>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                { posts.map((post, index) => <Card post={post} key={post.url} />) }\r\n                { loading ? <Spinner /> : ''}\r\n            </div>\r\n            {}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Catalog;\r\n"]},"metadata":{},"sourceType":"module"}