{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\learning\\\\vseotzivu\\\\frontend\\\\src\\\\components\\\\PostPage\\\\CommentCards.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useAPI } from '../../hooks/api.hook';\nimport Card from './Card';\nimport Spinner from '../Spinners/Spinner';\n\nconst CommentCards = ({\n  postId\n}) => {\n  const {\n    loading,\n    error,\n    request\n  } = useAPI();\n  const [comments, setComments] = useState('');\n  useEffect(async () => {\n    const response = await request('/api/posts/comments', 'POST', JSON.stringify({\n      postId\n    }));\n    response.reverse();\n    let graf = new Map(response.map(comm => [comm._id, { ...comm,\n      used: false\n    }]));\n\n    const use = id => graf.set(id, { ...graf.get(id),\n      used: true\n    });\n\n    const isUsed = id => graf.get(id).used;\n\n    const dfs = id => {\n      use(id);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pl-3\",\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        comment: graf.get(id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }\n      }), graf.get(id).replays.map(child => !isUsed(child) ? dfs(child) : ''));\n    };\n\n    setComments([...graf].map(v => dfs(v[1]._id)));\n  }, [postId]);\n  if (loading) return /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 24\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    style: {\n      paddingLeft: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, comments));\n};\n\nexport default CommentCards;","map":{"version":3,"sources":["C:/Users/User/OneDrive/Рабочий стол/learning/vseotzivu/frontend/src/components/PostPage/CommentCards.jsx"],"names":["React","useEffect","useState","useAPI","Card","Spinner","CommentCards","postId","loading","error","request","comments","setComments","response","JSON","stringify","reverse","graf","Map","map","comm","_id","used","use","id","set","get","isUsed","dfs","replays","child","v","paddingLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAmBC,IAAAA;AAAnB,MAA+BP,MAAM,EAA3C;AACA,QAAM,CAAEQ,QAAF,EAAYC,WAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,YAAU;AAChB,UAAMY,QAAQ,GAAG,MAAMH,OAAO,CAAC,qBAAD,EAAwB,MAAxB,EAAgCI,IAAI,CAACC,SAAL,CAAe;AAAER,MAAAA;AAAF,KAAf,CAAhC,CAA9B;AACAM,IAAAA,QAAQ,CAACG,OAAT;AACA,QAAIC,IAAI,GAAG,IAAIC,GAAJ,CAAQL,QAAQ,CAACM,GAAT,CAAaC,IAAI,IAAI,CAACA,IAAI,CAACC,GAAN,EAAW,EAAC,GAAGD,IAAJ;AAAUE,MAAAA,IAAI,EAAE;AAAhB,KAAX,CAArB,CAAR,CAAX;;AACA,UAAMC,GAAG,GAAGC,EAAE,IAAIP,IAAI,CAACQ,GAAL,CAASD,EAAT,EAAa,EAAC,GAAGP,IAAI,CAACS,GAAL,CAASF,EAAT,CAAJ;AAAkBF,MAAAA,IAAI,EAAE;AAAxB,KAAb,CAAlB;;AACA,UAAMK,MAAM,GAAGH,EAAE,IAAIP,IAAI,CAACS,GAAL,CAASF,EAAT,EAAaF,IAAlC;;AACA,UAAMM,GAAG,GAAGJ,EAAE,IAAI;AACdD,MAAAA,GAAG,CAACC,EAAD,CAAH;AACA,0BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAEP,IAAI,CAACS,GAAL,CAASF,EAAT,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEKP,IAAI,CAACS,GAAL,CAASF,EAAT,EAAaK,OAAb,CAAqBV,GAArB,CAAyBW,KAAK,IAAK,CAACH,MAAM,CAACG,KAAD,CAAR,GAAmBF,GAAG,CAACE,KAAD,CAAtB,GAAgC,EAAlE,CAFL,CADJ;AAMH,KARD;;AASAlB,IAAAA,WAAW,CAAC,CAAC,GAAGK,IAAJ,EAAUE,GAAV,CAAcY,CAAC,IAAIH,GAAG,CAACG,CAAC,CAAC,CAAD,CAAD,CAAKV,GAAN,CAAtB,CAAD,CAAX;AACH,GAhBQ,EAgBN,CAAEd,MAAF,CAhBM,CAAT;AAiBA,MAAGC,OAAH,EAAY,oBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACZ,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAACwB,MAAAA,WAAW,EAAE;AAAd,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKrB,QADL,CADJ,CADJ;AAOH,CA7BD;;AA+BA,eAAeL,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useAPI } from '../../hooks/api.hook';\r\nimport Card from './Card';\r\nimport Spinner from '../Spinners/Spinner';\r\n\r\nconst CommentCards = ({ postId }) => {\r\n    const { loading, error,  request } = useAPI();\r\n    const [ comments, setComments ] = useState('');\r\n\r\n    useEffect(async ()=>{\r\n        const response = await request('/api/posts/comments', 'POST', JSON.stringify({ postId }));\r\n        response.reverse();\r\n        let graf = new Map(response.map(comm => [comm._id, {...comm, used: false}]));\r\n        const use = id => graf.set(id, {...graf.get(id), used: true});\r\n        const isUsed = id => graf.get(id).used;\r\n        const dfs = id => {\r\n            use(id);\r\n            return(\r\n                <div className=\"pl-3\" key={id}>\r\n                    <Card comment={graf.get(id)}/>\r\n                    {graf.get(id).replays.map(child => (!isUsed(child)) ? dfs(child) : '')}\r\n                </div>\r\n            );\r\n        }\r\n        setComments([...graf].map(v => dfs(v[1]._id)));\r\n    }, [ postId ]);\r\n    if(loading) return <Spinner />\r\n    return (\r\n        <div className=\"card mt-4\">\r\n            <div className=\"card-body\" style={{paddingLeft: 0}}>\r\n                {comments}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentCards;\r\n"]},"metadata":{},"sourceType":"module"}