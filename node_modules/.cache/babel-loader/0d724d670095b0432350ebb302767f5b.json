{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\learning\\\\vseotzivu\\\\frontend\\\\src\\\\components\\\\PostPage\\\\CommentCards.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useAPI } from '../../hooks/api.hook';\nimport Card from './Card';\n\nconst CommentCards = () => {\n  const {\n    loading,\n    error,\n    request\n  } = useAPI();\n  const [comments, setComments] = useState('');\n  useEffect(async () => {\n    const response = await request('/api/posts/comments', 'POST', JSON.stringify({\n      postId: \"5f9688b3517561499c3f38f9\"\n    }));\n    let graf = new Map(response.map(comm => [comm._id, { ...comm,\n      used: false\n    }]));\n\n    const use = id => graf.set(id, { ...graf.get(id),\n      used: true\n    });\n\n    const isUsed = id => graf.get(id).used;\n\n    const dfs = id => {\n      use(id);\n      const childs = graf.get(id).replays;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }\n      }), childs.map(child => !isUsed(child) ? dfs(child) : ''));\n    };\n\n    setComments(graf.map(v => dfs(v[1]._id)));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, comments);\n};\n\nexport default CommentCards;","map":{"version":3,"sources":["C:/Users/User/OneDrive/Рабочий стол/learning/vseotzivu/frontend/src/components/PostPage/CommentCards.jsx"],"names":["React","useEffect","useState","useAPI","Card","CommentCards","loading","error","request","comments","setComments","response","JSON","stringify","postId","graf","Map","map","comm","_id","used","use","id","set","get","isUsed","dfs","childs","replays","child","v"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAmBC,IAAAA;AAAnB,MAA+BL,MAAM,EAA3C;AACA,QAAM,CAAEM,QAAF,EAAYC,WAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,YAAU;AAChB,UAAMU,QAAQ,GAAG,MAAMH,OAAO,CAAC,qBAAD,EAAwB,MAAxB,EAAgCI,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAf,CAAhC,CAA9B;AAEA,QAAIC,IAAI,GAAG,IAAIC,GAAJ,CAAQL,QAAQ,CAACM,GAAT,CAAaC,IAAI,IAAI,CAACA,IAAI,CAACC,GAAN,EAAW,EAAC,GAAGD,IAAJ;AAAUE,MAAAA,IAAI,EAAE;AAAhB,KAAX,CAArB,CAAR,CAAX;;AACA,UAAMC,GAAG,GAAGC,EAAE,IAAIP,IAAI,CAACQ,GAAL,CAASD,EAAT,EAAa,EAAC,GAAGP,IAAI,CAACS,GAAL,CAASF,EAAT,CAAJ;AAAkBF,MAAAA,IAAI,EAAE;AAAxB,KAAb,CAAlB;;AACA,UAAMK,MAAM,GAAGH,EAAE,IAAIP,IAAI,CAACS,GAAL,CAASF,EAAT,EAAaF,IAAlC;;AACA,UAAMM,GAAG,GAAGJ,EAAE,IAAI;AACdD,MAAAA,GAAG,CAACC,EAAD,CAAH;AACA,YAAMK,MAAM,GAAGZ,IAAI,CAACS,GAAL,CAASF,EAAT,EAAaM,OAA5B;AACA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEKD,MAAM,CAACV,GAAP,CAAWY,KAAK,IAAK,CAACJ,MAAM,CAACI,KAAD,CAAR,GAAmBH,GAAG,CAACG,KAAD,CAAtB,GAAgC,EAApD,CAFL,CADJ;AAMH,KATD;;AAUAnB,IAAAA,WAAW,CAACK,IAAI,CAACE,GAAL,CAASa,CAAC,IAAIJ,GAAG,CAACI,CAAC,CAAC,CAAD,CAAD,CAAKX,GAAN,CAAjB,CAAD,CAAX;AACH,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,QADL,CADJ;AAKH,CA5BD;;AA8BA,eAAeJ,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useAPI } from '../../hooks/api.hook';\r\nimport Card from './Card';\r\n\r\nconst CommentCards = () => {\r\n    const { loading, error,  request } = useAPI();\r\n    const [ comments, setComments ] = useState('');\r\n\r\n    useEffect(async ()=>{\r\n        const response = await request('/api/posts/comments', 'POST', JSON.stringify({ postId: \"5f9688b3517561499c3f38f9\" }));\r\n\r\n        let graf = new Map(response.map(comm => [comm._id, {...comm, used: false}]));\r\n        const use = id => graf.set(id, {...graf.get(id), used: true});\r\n        const isUsed = id => graf.get(id).used;\r\n        const dfs = id => {\r\n            use(id);\r\n            const childs = graf.get(id).replays;\r\n            return(\r\n                <div>\r\n                    <Card />\r\n                    {childs.map(child => (!isUsed(child)) ? dfs(child) : '')}\r\n                </div>\r\n            );\r\n        }\r\n        setComments(graf.map(v => dfs(v[1]._id)));\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {comments}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentCards;\r\n"]},"metadata":{},"sourceType":"module"}